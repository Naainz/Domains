---
import Layout from '../layouts/Layout.astro';
---

<Layout>
  <div class="container mx-auto mt-10">
    <h1 class="text-4xl font-bold mb-6 text-center">Check Domain Availability</h1>
    <div class="flex justify-center">
      <input 
        type="text" 
        placeholder="Enter domain name" 
        class="w-80 px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
        id="domain-input"
      />
      <button 
        class="ml-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition" 
        id="check-button"
      >
        Check
      </button>
    </div>
    <div id="result-container" class="mt-4 text-center"></div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      let domain = '';
      let availability = null;
      let whoisData = '';

      const validTLDs = [
        'com', 'net', 'org', 'edu', 'gov', 'co', 'io', 'biz', 'info', 'me', 'us', 'uk', 'ca', 'de', 'jp', 'fr',
        'au', 'eu', 'cn', 'in', 'br', 'ru', 'za', 'nz'
      ];

      const domainInput = document.getElementById('domain-input') as HTMLInputElement;
      const checkButton = document.getElementById('check-button');
      const resultContainer = document.getElementById('result-container');

      const isValidTLD = (domain) => {
        const parts = domain.split('.');
        if (parts.length < 2) return false;
        const tld = parts[parts.length - 1].toLowerCase();
        return validTLDs.includes(tld);
      };

      const showLoading = () => {
        resultContainer.innerHTML = `
          <div class="flex justify-center items-center space-x-2">
            <div class="loader ease-linear rounded-full border-4 border-t-4 border-gray-200 h-8 w-8"></div>
            <p class="text-blue-500">I'm searching for the domain name "${domain}"'s availability, please wait...</p>
          </div>
        `;
      };

      domainInput.addEventListener('input', (e) => {
        const target = e.target as HTMLInputElement;
        domain = target.value;
      });

      checkButton.addEventListener('click', async () => {
        if (domain.includes(' ')) {
          resultContainer.innerHTML = '<p class="text-red-500">Invalid entry: domain name cannot contain spaces.</p>';
          return;
        }

        if (!isValidTLD(domain)) {
          resultContainer.innerHTML = '<p class="text-red-500">Invalid entry: domain must have a valid TLD.</p>';
          return;
        }

        if (domain) {
          showLoading();
          try {
            const response = await fetch(`/api/check-domain.json?domain=${domain}`);
            const result = await response.json();
            availability = result.available ? 'Available' : 'Registered';
            whoisData = result.whoisData || '';

            resultContainer.innerHTML = `
              <p class="text-lg font-semibold ${availability === 'Available' ? 'text-green-500' : 'text-red-500'}">
                The domain "${domain}" is ${availability}.
              </p>
              ${availability === 'Registered' ? `
                <div class="mt-4 text-left">
                  <h2 class="text-xl font-bold mb-2">WHOIS Data:</h2>
                  <pre class="bg-gray-800 text-white p-4 rounded-md whitespace-pre-wrap">${whoisData}</pre>
                </div>` : ''
              }
              ${availability === 'Available' ? `
                <a 
                  href="https://www.godaddy.com/domainsearch/find?checkAvail=1&tmskey=&domainToCheck=${domain}" 
                  target="_blank"
                  class="mt-4 inline-block px-6 py-2 bg-green-500 text-white rounded-md hover:bg-green-600 transition"
                >
                  Buy on GoDaddy
                </a>` : ''
              }
            `;
          } catch (error) {
            console.error('Error checking domain:', error);
            resultContainer.innerHTML = `<p class="text-red-500">Error checking domain "${domain}".</p>`;
          }
        }
      });
    });
  </script>

  <style>
    .loader {
      border-top-color: #3498db;
      animation: spin 1s linear infinite;
    }

    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
  </style>
</Layout>
